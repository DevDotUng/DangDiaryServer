<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dangdiary.api.dao.LoginDAO">
  <select id="getLoginType" parameterType="int" resultType="String">
    SELECT login_type
    FROM users
    WHERE user_id = #{userId};
  </select>
  <select id="existId" parameterType="long" resultType="int">
    SELECT EXISTS
    (SELECT *
    FROM users
    WHERE social_id = #{socialId}) as existId
  </select>
  <select id="getUserId" parameterType="long" resultType="int">
    SELECT user_id
    FROM users
    WHERE social_id = ${socialId}
  </select>
  <insert id="addUserWithKakao" parameterType="com.dangdiary.api.dto.login.KakaoLoginDTO">
    INSERT INTO users(social_id, refresh_token, name, admission_date)
    VALUES
    (#{id}, #{refreshToken}, #{name}, NOW())
  </insert>
  <update id="updateUserWithKakao" parameterType="com.dangdiary.api.dto.login.KakaoLoginDTO">
    UPDATE users
    SET social_id = #{id}, refresh_token = #{refreshToken}, name = #{name}
    WHERE user_id = #{userId};
  </update>
  <select id="getLoginResponseDTO" parameterType="long" resultType="com.dangdiary.api.dto.login.LoginResponseDTO">
    SELECT user_id userId, name name, admission_date admissionDate
    FROM users
    WHERE social_id = #{socialId}
    LIMIT 1
  </select>
  <select id="getRefreshToken" parameterType="int" resultType="String">
    SELECT refresh_token refreshToken
    FROM users
    WHERE user_id = #{userId}
    LIMIT 1
  </select>
</mapper>